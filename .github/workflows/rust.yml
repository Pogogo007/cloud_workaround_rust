name: Build Rust Project for Linux and Windows

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download paths.txt from original repo
        run: wget https://raw.githubusercontent.com/tmplshdw/cloud_config_workaround/refs/heads/main/paths.txt -O paths.txt

      - name: Append extra paths
        run: echo >> paths.txt; cat extrapaths.txt >> paths.txt

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Build
        run: cargo build --release

      - name: Package binary and paths.txt
        run: |
          BIN_NAME=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[0].targets[] | select(.kind[] == "bin") | .name')
          mkdir output
          cp "target/release/$BIN_NAME" output/
          cp paths.txt output/
          tar -czf linux-build.tar.gz -C output .

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Latest
          files: linux-build.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    name: Build for Windows
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          
      - name: Install zip
        run: choco install zip -y

      - name: Download paths.txt from original repo
        run: Invoke-WebRequest https://raw.githubusercontent.com/tmplshdw/cloud_config_workaround/main/paths.txt -OutFile paths.txt
        shell: powershell

      - name: Append extra paths
        run: Get-Content extrapaths.txt | Add-Content paths.txt
        shell: powershell

      - name: Build
        run: cargo build --release

      - name: Package binary and path.txt
        shell: bash
        run: |
          BIN_NAME=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[0].targets[] | select(.kind[] == "bin") | .name')
          mkdir output
          cp "target/release/$BIN_NAME.exe" output/
          cp paths.txt output/
          cd output
          zip ../windows-build.zip *

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Latest
          files: windows-build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
